generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  createInputTypes = false
  createOptionalDefaultValuesTypes = true
  createRelationValuesTypes = true
  writeNullishInModelTypes = true
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  name     String
  username String    @unique
  password String
  products Product[]
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String? @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productIDs String[] @db.ObjectId @default([])
  products   Product[]   @relation(fields: [productIDs], references: [id])
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float?
  quantity    Int?
  categoryIDs String[]   @db.ObjectId @default([])
  categories  Category[] @relation(fields: [categoryIDs], references: [id])
  attributes  Json?
  imageUrl    String? // Campo para armazenar a URL da imagem do produto no Cloudinary
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  User        User?      @relation(fields: [userId], references: [id])
  userId      String?    @db.ObjectId @default("")
}
