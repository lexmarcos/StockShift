generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                         = "zod-prisma-types"
  createInputTypes                 = false
  createOptionalDefaultValuesTypes = true
  createRelationValuesTypes        = true
  writeNullishInModelTypes         = true
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  name     String
  username String    @unique
  password String
  products Product[]
}

model Inventory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model ProductTemplate {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description Boolean
  price       Boolean
  quantity    Boolean
  attributes  Json?
  image       Boolean
  categories  Boolean
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?   @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  productIDs  String[]  @default([]) @db.ObjectId
  products    Product[] @relation(fields: [productIDs], references: [id])
}

model Product {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String?
  price             Float?
  quantity          Int?
  categoryIDs       String[]         @default([]) @db.ObjectId
  categories        Category[]       @relation(fields: [categoryIDs], references: [id])
  attributes        Json?
  imageUrl          String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  User              User             @relation(fields: [userId], references: [id])
  userId            String           @default("") @db.ObjectId
  Inventory         Inventory        @relation(fields: [inventoryId], references: [id])
  inventoryId       String           @db.ObjectId
  ProductTemplate   ProductTemplate? @relation(fields: [productTemplateId], references: [id])
  productTemplateId String?          @db.ObjectId
}
